{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/dev/220913-xstate/","result":{"data":{"site":{"siteMetadata":{"title":"유림로그"}},"markdownRemark":{"id":"f49c1df2-108c-51dd-b6ae-72122b5cd10d","excerpt":"회사 퍼널 코드 구조 개선 AS-IS: use-funnel + recoil 스텝간 네비게이션 방식: setStep(from use-funnel)으로 직접코딩 (스텝이 다음 스텝명을 알고있음) 스텝 이동 경로를 한 눈에 파악하기 위하여 useFunnel…","html":"<h2>회사 퍼널 코드 구조 개선</h2>\n<h3>AS-IS: use-funnel + recoil</h3>\n<ul>\n<li>스텝간 네비게이션 방식: setStep(from use-funnel)으로 직접코딩 (스텝이 다음 스텝명을 알고있음)\n<ul>\n<li>스텝 이동 경로를 한 눈에 파악하기 위하여 useFunnel을 사용하는 상위 컴포넌트에서만 onNext를 하길 권장한다</li>\n</ul>\n</li>\n<li>리필 방식: 리필시엔 다음스텝명이 달라야 하므로 리필 플로우를 위한 컴포넌트를 새로 만들어야한다 (onNext 커스텀 위하여)</li>\n<li>퍼널 상태 수집: recoil\n<ul>\n<li>여기저기서 쓸 수 있는 특성이 장점이자 단점\n<ul>\n<li>퍼널 외부에서도 업데이트할 수 있다 (얘도 장점이자 단점)</li>\n</ul>\n</li>\n<li>퍼널 흐름과 수집된 상태가 실제로는 결합 되어있지만, 코드상으로 표현하기가 어렵다</li>\n</ul>\n</li>\n</ul>\n<h3>TO-BE: use-funnel + xstate</h3>\n<ul>\n<li>스텝간 네비게이션 방식: xstate의 전체 그래프에 의존 (스텝이 다음 스텝명을 모름)\n<ul>\n<li>내부에서는 무지성으로 xstate 액션 호출. xstate가 액션에 따라 다음 스텝을 안내해줌.</li>\n</ul>\n</li>\n<li>리필 방식: xstate 상태에 의존 (TBD)\n<ul>\n<li>리필중이면 다른 경로를 탈 수 있도록 xstate 그래프에 코딩해둔다.</li>\n<li>퍼널 컴포넌트를 새로 만들지 않아도 된다</li>\n</ul>\n</li>\n<li>퍼널 상태 수집: xstate context\n<ul>\n<li>해당 퍼널 내부에서만 상태를 업데이트할 수 있다</li>\n<li>퍼널 흐름과 수집된 상태를 엮어 관리할 수 있다(TBD)</li>\n</ul>\n</li>\n<li>강점: 퍼널 흐름과 내부상태를 centralize한다\n<ul>\n<li>올바른 다이어그램만 그려두면 퍼널이 우리가 설계한대로 동작할거라고 기대할 수 있다\n<ul>\n<li>다이어그램을 시각화하여 공유할 수 있다(sort of 문서화).\n<ul>\n<li>개발자도 흐름을 파악하기 용이하고, 비개발자도 쉽게 볼 수 있다.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>퍼널 흐름 + 수집상태를 디버깅할 때 코드 한 군데만 보면 된다</li>\n</ul>\n</li>\n</ul>\n<h3>TO-TO-BE: use-fsm-funnel</h3>\n<ul>\n<li>use-funnel + fsm방식을 한 번 추상화하여 재사용가능하도록 한다 (xstate 의존성은 넣을지말지 고민)</li>\n</ul>\n<h3>개발 전략</h3>\n<ol>\n<li>알뜰폰 전체 퍼널 중 일부(개통퍼널)에만 적용</li>\n<li>고도화 시키며 쓸만한지 판별</li>\n<li>괜찮으면 전체 적용</li>\n<li>이후에 라이브러리 개발.</li>\n</ol>\n<h2>나의 이해</h2>\n<h3>유한 상태 기계란?</h3>\n<ul>\n<li>like 신호등.\n<ul>\n<li>빨강/노랑/초록 세개의 상태 사이를 넘나든다.</li>\n<li>한번에 빨강이면서 노랑일 순 없다.</li>\n<li>초록이 시간이 지나면 노랑이 되고, 노랑이 시간이 지나면 빨강이 됨 (상태 사이를 바꾸는 조건이 있다. 상태는 특정 조건이 되면 다른 상태로 변한다)</li>\n</ul>\n</li>\n</ul>\n<h3>Boolean explosion</h3>\n<p>신호등을 코드로 짜기 (빨/초 만 있다 가정)</p>\n<h4>Step1. Boolean들로 짜기</h4>\n<ul>\n<li>가장 쉬운 접근방법, boolean으로 코드 짜기\n<ul>\n<li>boolean 상태 2개: isRed, isGreen</li>\n<li>액션: 토글\n<ul>\n<li>토글을 호출하면 red에서 green으로, 혹은 green에서 red로 색을 바꾼다</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>여기에 상태 하나를 추가한다면?\n<ul>\n<li>boolean 상태 3개: isRed, isGreen, isBroken</li>\n<li>액션: 토글, 운석떨어짐\n<ul>\n<li>운석이 떨어지면 isBroken: true로 바꾼다</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>버그가 날 구멍이 생김!\n<ul>\n<li>토글 액션에 isBroken이면 토글 안 되도록 추가 코딩 해줘야한다.</li>\n<li>이런식으로 boolean 값이 추가될수록 여기저기를 추가적으로 수정해줘야함…</li>\n</ul>\n</li>\n</ul>\n<h4>Step2. 열거형으로 개선하기</h4>\n<ul>\n<li>표현 가능한 상태를 하나만 둔다\n<ul>\n<li>state: RED | GREEN | BROKEN</li>\n<li>토글이든, 운석떨어짐이든 액션마다 현재 가용한 상태를 한 번에 관리할 수 있어(switchcase 사용 등) 버그가 날 구멍이 줄어든다</li>\n</ul>\n</li>\n</ul>\n<h4>Step3. 상태머신으로 개선하기</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> 신호등상태 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token constant\">RED</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">액션</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">토글</span><span class=\"token operator\">:</span> <span class=\"token string\">\"GREEN\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">운석떨어짐</span><span class=\"token operator\">:</span> <span class=\"token string\">\"BROKEN\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">GREEN</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">액션</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">토글</span><span class=\"token operator\">:</span> <span class=\"token string\">\"RED\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">운석떨어짐</span><span class=\"token operator\">:</span> <span class=\"token string\">\"BROKEN\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token constant\">BROKEN</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">액션</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">특징</span><span class=\"token operator\">:</span> <span class=\"token string\">\"끝\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 더 이상 할 액션이 없으니</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> 신호등상태머신 <span class=\"token operator\">=</span> <span class=\"token function\">Machine</span><span class=\"token punctuation\">(</span>신호등상태<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">초기값</span><span class=\"token operator\">:</span> <span class=\"token string\">\"RED\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> 신호등 <span class=\"token operator\">=</span> <span class=\"token function\">interpret</span><span class=\"token punctuation\">(</span>신호등상태머신<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n신호등<span class=\"token punctuation\">.</span><span class=\"token function\">이벤트보내</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"토글\"</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>신호등<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token comment\">// GREEN</span>\n신호등<span class=\"token punctuation\">.</span><span class=\"token function\">이벤트보내</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"토글\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// RED</span>\n신호등<span class=\"token punctuation\">.</span><span class=\"token function\">이벤트보내</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"운석떨어짐\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// BROKEN</span></code></pre></div>\n<ul>\n<li>가질 수 있는 상태와 이 상태가 다른 상태로 바뀔때의 액션을 적어준다.</li>\n<li>이벤트를 보내주면 상태가 알아서 숑숑 바뀐다</li>\n</ul>\n<h4>FSM의 좋은점</h4>\n<ul>\n<li>흐름을 centralize하기</li>\n<li>디자이너는 이미 FSM의 다이어그램처럼 사고함.\n<ul>\n<li>개발자는 개발할 때 바텀업으로 사고하기 쉬움</li>\n<li>디자이너와 개발자의 single source of truth를 맞추기</li>\n</ul>\n</li>\n<li>디버깅 쉬움 (퍼널 흐름이 한군데서 관리되니)\n<ul>\n<li>I had checked 44 different places in the code to finally find the answer.</li>\n<li>We had abstracted a ton of code for reuse (typically a good idea), but a majority of that abstracted code was capable of affecting the user flow: 너무 재사용가능하게 하면 온갖군데서 진입할수있어서 디버깅 힘들겠군</li>\n</ul>\n</li>\n</ul>\n<h2>Building an acquisition Funnel in React with Xstate</h2>\n<p><a href=\"https://dev.indooroutdoor.io/building-an-acquisition-funnel-in-react-with-xstate\">https://dev.indooroutdoor.io/building-an-acquisition-funnel-in-react-with-xstate</a>\n<a href=\"https://dev.indooroutdoor.io/building-an-acquisition-funnel-in-react-with-xstate-part-2\">https://dev.indooroutdoor.io/building-an-acquisition-funnel-in-react-with-xstate-part-2</a>\n<a href=\"https://medium.com/the-arcadia-source/architecting-a-signup-funnel-app-with-react-and-xstate-part-1-f329b69c2f7e\">https://medium.com/the-arcadia-source/architecting-a-signup-funnel-app-with-react-and-xstate-part-1-f329b69c2f7e</a></p>\n<ul>\n<li>단단하고, 읽기 좋고, 결정론적인 모델링 프로세스</li>\n<li>FSM이랑 퍼널의 궁합이 좋은 이유\n<ul>\n<li>필요한 순간에 필요한 스텝을 보여줘야 하기 때문</li>\n<li>유저 액션 시퀀스에 따라 퍼널 상태가 결정되기 때문</li>\n<li>올바른 다이어그램만 그려두면 퍼널이 우리가 설계한대로 동작할거라고 기대할 수 있다!</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createMachine<span class=\"token punctuation\">,</span> assign <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'xstate'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> stateMachine <span class=\"token operator\">=</span> Machine<span class=\"token operator\">&lt;</span>FunnelData<span class=\"token punctuation\">,</span> FunnelEvent<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">\"funnel-state-machine\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">initial</span><span class=\"token operator\">:</span> <span class=\"token string\">\"activity\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 초기 스텝이름</span>\n    <span class=\"token literal-property property\">context</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 퍼널 내부 상태</span>\n      <span class=\"token literal-property property\">activity</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">attendees</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">additional_information</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">payment</span><span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">states</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">activity</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">on</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token constant\">SELECT_ACTIVITY</span><span class=\"token operator\">:</span> <span class=\"token string\">\"register_attendee\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">exit</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"setActivity\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 액티비티 스텝 탈출하면 setActivity 액션 불러</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">register_attendee</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">on</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token constant\">ADD_ATTENDEE</span><span class=\"token operator\">:</span> <span class=\"token string\">\"register_attendee\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token constant\">ADD_INFO</span><span class=\"token operator\">:</span> <span class=\"token string\">\"additional_information\"</span><span class=\"token punctuation\">,</span>\n          <span class=\"token constant\">SUBMIT_ATTENDEE</span><span class=\"token operator\">:</span> <span class=\"token string\">\"payment\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">exit</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"addattendee\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">additional_information</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">on</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token constant\">SUBMIT_ADDITIONNAL_INFORMATION</span><span class=\"token operator\">:</span> <span class=\"token string\">\"payment\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">exit</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"setAdditionalInformation\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">payment</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token string\">\"final\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">setActivity</span><span class=\"token operator\">:</span> <span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function-variable function\">activity</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">context<span class=\"token punctuation\">,</span> event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> event<span class=\"token punctuation\">.</span>data\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">addattendee</span><span class=\"token operator\">:</span> <span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>addAttendee<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">setAdditionalInformation</span><span class=\"token operator\">:</span> <span class=\"token function\">assign</span><span class=\"token punctuation\">(</span>setAddtionalInformation<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 요렇게 할 수도 있음</span>\n    <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// 퍼널 내부상태(context)를 event.value를 사용해 업데이트 한다</span>\n      <span class=\"token function-variable function\">count</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">context<span class=\"token punctuation\">,</span> event</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> context<span class=\"token punctuation\">.</span>count <span class=\"token operator\">+</span> event<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">,</span>\n\n      <span class=\"token comment\">// assign static value to the message (no function needed)</span>\n      <span class=\"token literal-property property\">message</span><span class=\"token operator\">:</span> <span class=\"token string\">'Count changed'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">addAttendee</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token literal-property property\">context</span><span class=\"token operator\">:</span> FunnelData<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> FunnelEvent</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">ADD_ATTENDEE</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        context<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">attendees</span><span class=\"token operator\">:</span> context<span class=\"token punctuation\">.</span>attendees<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">SUBMIT_ATTENDEE</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        context<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">attendees</span><span class=\"token operator\">:</span> context<span class=\"token punctuation\">.</span>attendees<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> context<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Xstate Docs Speedrun</h2>\n<p><a href=\"https://www.youtube.com/watch?v=2eurRx-tR-I&#x26;t=670s&#x26;ab_channel=MattPocock\">https://www.youtube.com/watch?v=2eurRx-tR-I&#x26;t=670s&#x26;ab_channel=MattPocock</a></p>\n<h2>XState 의 기본 익혀보기</h2>\n<ul>\n<li><a href=\"https://www.rinae.dev/posts/learning-xstate\">https://www.rinae.dev/posts/learning-xstate</a></li>\n</ul>","frontmatter":{"title":"XState","date":"September 13, 2022","description":"제발 날 살려조","category":"dev"}},"previous":{"fields":{"slug":"/books/220913-product-managements-sacred-seven/"},"frontmatter":{"title":"7가지 코드"}},"next":{"fields":{"slug":"/dev/220913-xstate-docs/"},"frontmatter":{"title":"XState 공식문서 탐구"}}},"pageContext":{"id":"f49c1df2-108c-51dd-b6ae-72122b5cd10d","previousPostId":"95ac5c99-073a-52c8-8492-50e815cc033f","nextPostId":"d0ee267c-c166-5303-9d50-e097a0bb01e5"}},"staticQueryHashes":["2841359383","3257411868"]}