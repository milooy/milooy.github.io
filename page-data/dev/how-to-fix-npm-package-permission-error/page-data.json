{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/dev/how-to-fix-npm-package-permission-error/","result":{"data":{"site":{"siteMetadata":{"title":"유림로그"}},"markdownRemark":{"id":"a6cdcce4-cae2-524f-920b-499e02adb0ba","excerpt":"글로벌로 패키지 설치하니 permission denied 에러가 나와요 살다보면 글로벌로 패키지를 설치할 일이 종종 있습니다. “우왕 vue cli 설치해야지~ 독스 보니까 npm -g 옵션으로 설치하라네. 터미널에서 cli명령어를 돌리는거니까 global…","html":"<h2>글로벌로 패키지 설치하니 permission denied 에러가 나와요</h2>\n<p>살다보면 글로벌로 패키지를 설치할 일이 종종 있습니다.</p>\n<blockquote>\n<p>“우왕 vue cli 설치해야지~ <a href=\"https://cli.vuejs.org/#getting-started\">독스</a> 보니까 npm -g 옵션으로 설치하라네. 터미널에서 cli명령어를 돌리는거니까 global로 설치하라는게 맞지맞지~”</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> @vue/cli</code></pre></div>\n<p>하지만 바로 권한 에러를 맞게 됩니다</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> code EACCES\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> syscall <span class=\"token function\">mkdir</span>\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> path /usr/local/lib/node_modules/@vue\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> errno <span class=\"token parameter variable\">-13</span>\n<span class=\"token function\">npm</span> ERR<span class=\"token operator\">!</span> Error: EACCES: permission denied, <span class=\"token function\">mkdir</span> <span class=\"token string\">'/usr/local/lib/node_modules/@vue'</span></code></pre></div>\n<p><code class=\"language-text\">usr/local/lib/node_modules</code>에 설치 권한이 없다네요.\n어떻게 권한을 줄 수 있을까요?</p>\n<h2>나쁜 해결책: 만능열쇠 sudo</h2>\n<p>가장 쉬운 해결책으로는 sudo가 있습니다.</p>\n<p>관리자 권한을 사용해서 강제로 설치 시켜버리는거죠.</p>\n<p><img src=\"https://img.devrant.com/devrant/rant/r_2221074_Z99iL.jpg\" alt=\"sudo meme\"></p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ <span class=\"token function\">sudo</span> <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> @vue/cli</code></pre></div>\n<p>하지만 이 방법에는 몇 가지 문제점이 있습니다.</p>\n<ol>\n<li>보안 이슈: 나쁜 마음 먹은 패키지(혹은 그냥 잘못 짠 패키지일수도) 등을 sudo로 설치시 내 컴퓨터의 제어를 넘겨줄 수 있게 됩니다.</li>\n<li>폴더 꼬임: -g없이 <code class=\"language-text\">sudo npm install</code>시 루트유저만 접근가능한 특수한 로컬 디렉토리를 만듭니다. 나중에 일반적으로 설치한 패키지와 꼬일 수 있어요.</li>\n<li>잠정적 권한 꼬임: npm configuration 등 수정햇을 때 등 sudo없이는 일반적 패키지도 인스톨이 잘 안되는 경우를 맞을 수도 있습니다.</li>\n</ol>\n<h2>제일 깔끔한 해결책: npm을 node version manager로 재설치</h2>\n<p>맥은 n이나 nvm, 윈도우는 nodist나 nvm-windows같은 노드 버전 매니저를 통해서 설치하면 에러가 발생하지 않습니다.\n<a href=\"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm\">https://docs.npmjs.com/downloading-and-installing-node-js-and-npm</a></p>\n<h2>괜찮은 해결책1: -g없이 npx를 통해 cli명령어 사용하기</h2>\n<p>npx를 통하면 cli명령어를 바로 사용할 수 있습니다.</p>\n<p>즉</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">// 이렇게 글로벌로 설치 안 해도\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> react-native <span class=\"token operator\">&amp;&amp;</span> react-native init\n\n// 바로 CLi 명령어를 돌릴 수 있습니다\n$ npx react-native init</code></pre></div>\n<p>그러면 글로벌 대신 로컬 <code class=\"language-text\">node_modules/.bin/react-native</code>에 설치된 패키지를 참고합니다.</p>\n<h2>괜찮은 해결책2: global install 폴더를 홈 디렉토리 내부로 변경</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ <span class=\"token function\">mkdir</span> ~/.npm-global\n\n$ <span class=\"token function\">npm</span> config <span class=\"token builtin class-name\">set</span> prefix ~/.npm-global</code></pre></div>\n<p>을 통해 -g를 통해 설치한 패키지의 폴더를 변경합니다.</p>\n<p>다만 내 터미널도 이를 인식해야 하기 때문에 .zshrc나 .bash-profile에 다음을 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=~</span>/.npm-global/bin:<span class=\"token environment constant\">$PATH</span></code></pre></div>\n<p><a href=\"https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally#manually-change-npms-default-directory\">https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally#manually-change-npms-default-directory</a></p>\n<h2>Reference</h2>\n<ul>\n<li><a href=\"https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally\">https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally</a></li>\n<li><a href=\"https://medium.com/@ExplosionPills/dont-use-sudo-with-npm-still-66e609f5f92\">https://medium.com/@ExplosionPills/dont-use-sudo-with-npm-still-66e609f5f92</a></li>\n</ul>","frontmatter":{"title":"글로벌로 npm 패키지 설치지 Permission 에러 해결방법","date":"May 09, 2022","description":"sudo npm install -g <something> 을 멈추시오","category":"dev"}},"previous":{"fields":{"slug":"/books/how-to-do-nothing/"},"frontmatter":{"title":"아무 것도 하지 않는 법 (제니 오델 저)"}},"next":{"fields":{"slug":"/books/circe/"},"frontmatter":{"title":"키르케 (매들린 밀러 저)"}}},"pageContext":{"id":"a6cdcce4-cae2-524f-920b-499e02adb0ba","previousPostId":"2e40eaed-3e4f-5799-bc15-a7406cc60933","nextPostId":"b6909f99-a804-5627-aacd-235b4151c4d1"}},"staticQueryHashes":["2841359383","3257411868"]}