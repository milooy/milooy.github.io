{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/dev/22092-xstate-funnel/","result":{"data":{"site":{"siteMetadata":{"title":"유림로그"}},"markdownRemark":{"id":"cc8c6a32-719a-5849-8d53-9b6b806e617c","excerpt":"퍼널에서 프로미스 다루기 xstate는 기본적으로 fire and forget이라 이벤트를 await한다는게 컨셉상 맞지 않는다.\npromise를 하려면 invoke로 하고 상태를 하나 더 만들..기?\nhttps://github.com/statelyai/xstate/issues/437","html":"<h2>퍼널에서 프로미스 다루기</h2>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token literal-property property\">가입유형선택서브퍼널</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">on</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">NEXT</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'.loading'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'setOrderTypeAndPhoneNumber'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">개통처리성공</span><span class=\"token operator\">:</span> <span class=\"token string\">'주민등록번호입력스텝'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">initial</span><span class=\"token operator\">:</span> <span class=\"token string\">'idle'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">states</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">idle</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">loading</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">invoke</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> <span class=\"token string\">'post개통처리시작'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">src</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> FunnelContext<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">phoneNumber</span><span class=\"token operator\">:</span> string<span class=\"token punctuation\">;</span> orderType<span class=\"token operator\">:</span> <span class=\"token string\">'신규가입'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'번호이동'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n            <span class=\"token function\">post개통처리시작</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n              <span class=\"token literal-property property\">currentPhoneNumber</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>phoneNumber<span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">orderType</span><span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>orderType<span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">productId</span><span class=\"token operator\">:</span> context<span class=\"token punctuation\">.</span>productId<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">onDone</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'success'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">actions</span><span class=\"token operator\">:</span> <span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">orderId</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_context<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> DoneInvokeEvent<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> number <span class=\"token punctuation\">}</span><span class=\"token operator\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> event<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">success</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token string\">'개통처리성공'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>xstate는 기본적으로 fire and forget이라 이벤트를 await한다는게 컨셉상 맞지 않는다.\npromise를 하려면 invoke로 하고 상태를 하나 더 만들..기?\n<a href=\"https://github.com/statelyai/xstate/issues/437\">https://github.com/statelyai/xstate/issues/437</a></p>","frontmatter":{"title":"XState with Funnel","date":"October 03, 2022","description":"퍼널 뚫자","category":"dev"}},"previous":{"fields":{"slug":"/dev/220923-xstate-go-back/"},"frontmatter":{"title":"XState에서 뒤로가기 구현"}},"next":{"fields":{"slug":"/dev/221115-monthly-i-learned/"},"frontmatter":{"title":"2022년 11월 Monthly I Learned"}}},"pageContext":{"id":"cc8c6a32-719a-5849-8d53-9b6b806e617c","previousPostId":"b21f691d-5eb5-50a3-b481-51be0c53c2a6","nextPostId":"26d01156-439e-50d0-a240-5b1ec016cffc"}},"staticQueryHashes":["2841359383","3257411868"]}